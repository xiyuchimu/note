工厂模式
抽象工厂模式
单例模式
模板模式:一些方法通用，却在每一个子类都重新写了这一方法 《大话》选择题<-->建造者模式
建造者模式：注重顺序 《大话》炒面与画火柴人  - 若是没有构造者类,建造者模式可以看作一个模板方法模式
原型模式：该接口用于创建当前对象的克隆
适配器模式：作为两个不兼容的接口之间的桥梁
桥接模式：是用于把抽象化与实现化解耦，使得二者可以独立变化
过滤器模式：这种模式允许开发人员使用不同的标准来过滤一组对象，通过逻辑运算以解耦的方式把它们连接起来
组合模式：部门 树形图
装饰器模式：
外观模式：种类型的设计模式属于结构型模式，它向现有的系统添加一个接口，来隐藏系统的复杂性。
享元模式：如果未找到匹配的对象，则创建新对象
代理模式：
责任链模式：请求创建了一个接收者对象的链Logger
命令模式:将一个请求封装成一个对象，从而使您可以用不同的请求对客户进行参数化。
解释器模式:给定一个语言，定义它的文法表示，并定义一个解释器，这个解释器使用该标识来解释语言中的句子。
迭代器模式:Iterator 
中介者模式:多个用户可以向聊天室发送消息，聊天室向所有的用户显示消息
备忘录模式:
观察者模式:
状态模式:允许对象在内部状态发生改变时改变它的行为，对象看起来好像修改了它的类。
空对象模式:
策略模式:定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换。<-->工厂模式
访问者模式:OA系统 全职 兼职，人力资源部 财务部（访问者）https://www.cnblogs.com/edisonchou/p/7247990.html